// src/styles/_mixins.scss

@use 'variables' as *;

// =============================================
// NUEVOS MIXINS PARA SISTEMA RESPONSIVE
// =============================================

// Función para calcular porcentajes
@use "sass:math";

@function calc-percentage($value) {
  @return $value * 100%;
}

// Mixins para media queries "mobile-first"
@mixin mobile-up {
  @media (min-width: $breakpoint-mobile) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: $breakpoint-tablet) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: $breakpoint-desktop) {
    @content;
  }
}

@mixin wide-up {
  @media (min-width: $breakpoint-wide) {
    @content;
  }
}

@mixin ultra-wide-up {
  @media (min-width: $breakpoint-ultra-wide) {
    @content;
  }
}

// Mixins para media queries "desktop-first" (para casos específicos)
@mixin mobile-down {
  @media (max-width: #{$breakpoint-mobile - 1px}) {
    @content;
  }
}

@mixin tablet-down {
  @media (max-width: #{$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin desktop-down {
  @media (max-width: #{$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin wide-down {
  @media (max-width: #{$breakpoint-wide - 1px}) {
    @content;
  }
}

// Mixins para rangos específicos
@mixin mobile-only {
  @media (min-width: $breakpoint-mobile) and (max-width: #{$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: $breakpoint-tablet) and (max-width: #{$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin desktop-only {
  @media (min-width: $breakpoint-desktop) and (max-width: #{$breakpoint-wide - 1px}) {
    @content;
  }
}

// =============================================
// MIXINS ANTERIORES (actualizados)
// =============================================

// Mixin para gradientes
@mixin gradient-dorado() {
  background: linear-gradient(135deg, $color-dorado, $color-dorado-oscuro);
}

@mixin gradient-negro() {
  background: linear-gradient(135deg, $color-negro 0%, $color-negro-claro 100%);
}

// Mixin para centrar elementos
@mixin center-flex() {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Mixin para botones
@mixin button-base() {
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $border-radius-medium;
  font-weight: 600;
  cursor: pointer;
  transition: $transition-base;
  
  &:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: $shadow-dorado;
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

@mixin button-primary() {
  @include button-base();
  @include gradient-dorado();
  color: $color-negro;
}

// Mixin para cards
@mixin card() {
  background: var(--card-bg);
  border-radius: $border-radius-xl;
  padding: $spacing-lg;
  box-shadow: var(--shadow-medium);
  transition: $transition-base;
  border: 1px solid var(--color-border);
  
  &:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-large);
  }
}

// Mixin para inputs
@mixin input-base() {
  width: 100%;
  padding: 0.85rem 1rem;
  border: 2px solid var(--input-border);
  border-radius: $border-radius-large;
  font-size: $font-size-base;
  transition: $transition-base;
  background: var(--input-bg);
  color: var(--color-text);
  
  &:focus {
    outline: none;
    border-color: var(--input-border-focus);
    background: var(--input-bg-focus);
    box-shadow: 0 0 0 3px rgba(255, 215, 0, 0.1);
  }
  
  &.error-input {
    border-color: var(--color-error) !important;
  }
}

// Mixins para responsive (mantener compatibilidad)
@mixin mobile {
  @media (max-width: $breakpoint-mobile) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: $breakpoint-tablet) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $breakpoint-desktop) {
    @content;
  }
}

// Mixin para animaciones
@mixin fadeIn($delay: 0) {
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
  animation-delay: $delay;
}

// Mixin para grid responsive
@mixin make-grid($columns: 12) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $spacing-md;
  
  @include tablet-down {
    grid-template-columns: repeat(6, 1fr);
  }
  
  @include mobile-down {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Mixin para aspect ratio
@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: "";
    display: block;
    padding-top: math.div($height, $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

// Mixin para truncar texto
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  to {
    transform: translateY(0);
  }
}

@keyframes spin {
  to { 
    transform: rotate(360deg);
  }
}
